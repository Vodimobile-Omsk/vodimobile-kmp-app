[versions]
agp = "8.5.0"
atomicfu = "0.23.2"
bom = "2.5.4"
composeLintChecks = "1.3.1"
coreSplashscreen = "1.1.0-rc01"
datastore = "1.1.1"
kotlin = "1.9.23"
compose = "1.6.2"
compose-material3 = "1.1.2"
androidx-activityCompose = "1.8.0"
composePlugin = "1.6.11"
foundationAndroid = "1.6.8"
composeCompiler = "2.0.0"
kotlinxCoroutinesTest = "1.9.0-RC"
material = "compose"
navigationCompose = "2.7.7"
okio = "3.9.0"
testng = "6.9.6"
skie = "0.8.2"
uiTestJunit4Android = "1.6.8"
kotlinxDatetime = "0.6.0"

#Moko
mokoResources = "0.24.1"
mokoGraphicsExport = "0.9.0"

#Koin
koin = "3.6.0-Beta4"
junitKtx = "1.2.1"
koinNavigationCompose = "2.8.0-alpha02"
koinComposeMultiplatform = "1.2.0-Beta4"
lifecycleViewModel = "2.8.2"

#Coroutines
kotlinxCoroutinesCore = "1.8.1"
androidCoroutines = "1.8.1"

#Ktor
ktor = "2.3.12"
kotlinxSerializationJson = "1.7.1"

#Buildconfig
buildkonfigGradlePlugin = "0.15.1"
kotlinGradlePlugin = "1.9.0"

#Firebase
googleGmsGoogleServices = "4.4.2"
firebaseMessaging = "24.0.0"

[libraries]
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
androidx-material = { module = "androidx.compose.material:material", version.ref = "material" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }
gotrue-kt = { module = "io.github.jan-tennert.supabase:gotrue-kt" }
bom = { module = "io.github.jan-tennert.supabase:bom", version.ref = "bom" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
androidx-foundation-android = { group = "androidx.compose.foundation", name = "foundation-android", version.ref = "foundationAndroid" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
realtime-kt = { module = "io.github.jan-tennert.supabase:realtime-kt" }
postgrest-kt = { module = "io.github.jan-tennert.supabase:postgrest-kt" }
resources-generator = { module = "dev.icerock.moko:resources-generator", version.ref = "mokoResources" }
testng = { group = "org.testng", name = "testng", version.ref = "testng" }
androidx-ui-test-junit4-android = { group = "androidx.compose.ui", name = "ui-test-junit4-android", version.ref = "uiTestJunit4Android" }
androidx-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }
skie-annotations = { module = "co.touchlab.skie:configuration-annotations", version.ref = "skie" }

#Koin
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test-junit4 = { module = "io.insert-koin:koin-test-junit4", version.ref = "koin" }
koin-android-test = { module = "io.insert-koin:koin-android-test", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
androidx-junit-ktx = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "junitKtx" }

#KMP koin
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycleViewModel"}
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinComposeMultiplatform" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koinComposeMultiplatform" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "koinNavigationCompose" }

#Lint
compose-lint-checks = { module = "com.slack.lint.compose:compose-lint-checks", version.ref = "composeLintChecks" }

#Compose Material Icons
compose-icons = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose"}

#Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }

#Coroutines
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "androidCoroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }

#Buiuldkonfig
buildkonfig-gradle-plugin = { module = "com.codingfeline.buildkonfig:buildkonfig-gradle-plugin", version.ref = "buildkonfigGradlePlugin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinGradlePlugin" }

#Date time
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }

#Moko resources
moko-resources = { module = "dev.icerock.moko:resources", version.ref = "mokoResources" }
#Exports
moko-graphics-export = { module = "dev.icerock.moko:graphics", version.ref = "mokoGraphicsExport"}
firebase-messaging = { group = "com.google.firebase", name = "firebase-messaging", version.ref = "firebaseMessaging" }

#Cryptographing
cryptography-core = { module = "dev.whyoleg.cryptography:cryptography-core" }
cryptography-provider-jdk = { module = "dev.whyoleg.cryptography:cryptography-provider-jdk" }
cryptography-provider-openssl3-prebuilt = { module = "dev.whyoleg.cryptography:cryptography-provider-openssl3-prebuilt" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "composePlugin" }
skie = { id = "co.touchlab.skie", version.ref = "skie" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "composeCompiler" }
kotlinx-serialization = {id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin"}
google-gms-google-services = { id = "com.google.gms.google-services", version.ref = "googleGmsGoogleServices" }